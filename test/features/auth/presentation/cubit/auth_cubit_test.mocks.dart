// Mocks generated by Mockito 5.4.5 from annotations
// in scalable_ecommerce/test/features/auth/presentation/cubit/auth_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:scalable_ecommerce/core/errors/failures.dart' as _i6;
import 'package:scalable_ecommerce/core/storage/secure_storage.dart' as _i16;
import 'package:scalable_ecommerce/core/usecases/usecase.dart' as _i10;
import 'package:scalable_ecommerce/features/auth/domain/entities/auth_tokens.dart'
    as _i15;
import 'package:scalable_ecommerce/features/auth/domain/entities/user.dart'
    as _i7;
import 'package:scalable_ecommerce/features/auth/domain/repositories/auth_repository.dart'
    as _i2;
import 'package:scalable_ecommerce/features/auth/domain/usecases/forgot_password_usecase.dart'
    as _i12;
import 'package:scalable_ecommerce/features/auth/domain/usecases/get_current_user_usecase.dart'
    as _i11;
import 'package:scalable_ecommerce/features/auth/domain/usecases/google_sign_in_usecase.dart'
    as _i17;
import 'package:scalable_ecommerce/features/auth/domain/usecases/login_usecase.dart'
    as _i4;
import 'package:scalable_ecommerce/features/auth/domain/usecases/logout_usecase.dart'
    as _i9;
import 'package:scalable_ecommerce/features/auth/domain/usecases/register_usecase.dart'
    as _i8;
import 'package:scalable_ecommerce/features/auth/domain/usecases/reset_password_usecase.dart'
    as _i13;
import 'package:scalable_ecommerce/features/auth/domain/usecases/update_profile_usecase.dart'
    as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRepository_0 extends _i1.SmartFake
    implements _i2.AuthRepository {
  _FakeAuthRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUseCase extends _i1.Mock implements _i4.LoginUseCase {
  MockLoginUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> call(_i4.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
}

/// A class which mocks [RegisterUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterUseCase extends _i1.Mock implements _i8.RegisterUseCase {
  MockRegisterUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> call(
          _i8.RegisterParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
}

/// A class which mocks [LogoutUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUseCase extends _i1.Mock implements _i9.LogoutUseCase {
  MockLogoutUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(_i10.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}

/// A class which mocks [GetCurrentUserUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentUserUseCase extends _i1.Mock
    implements _i11.GetCurrentUserUseCase {
  MockGetCurrentUserUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> call(_i10.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
}

/// A class which mocks [ForgotPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordUseCase extends _i1.Mock
    implements _i12.ForgotPasswordUseCase {
  MockForgotPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(
          _i12.ForgotPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}

/// A class which mocks [ResetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordUseCase extends _i1.Mock
    implements _i13.ResetPasswordUseCase {
  MockResetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(
          _i13.ResetPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}

/// A class which mocks [UpdateProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateProfileUseCase extends _i1.Mock
    implements _i14.UpdateProfileUseCase {
  MockUpdateProfileUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> call(
          _i14.UpdateProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> login({
    required String? email,
    required String? password,
    bool? rememberMe = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
            #rememberMe: rememberMe,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
              #rememberMe: rememberMe,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> getCachedUserDirectly() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedUserDirectly,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #getCachedUserDirectly,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<void> setLoggedInStatus(bool? isLoggedIn) => (super.noSuchMethod(
        Invocation.method(
          #setLoggedInStatus,
          [isLoggedIn],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> loginWithUsername({
    required String? username,
    required String? password,
    bool? rememberMe = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithUsername,
          [],
          {
            #username: username,
            #password: password,
            #rememberMe: rememberMe,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #loginWithUsername,
            [],
            {
              #username: username,
              #password: password,
              #rememberMe: rememberMe,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> register({
    required String? email,
    required String? username,
    required String? password,
    required String? firstName,
    required String? lastName,
    String? phone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #email: email,
            #username: username,
            #password: password,
            #firstName: firstName,
            #lastName: lastName,
            #phone: phone,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #email: email,
              #username: username,
              #password: password,
              #firstName: firstName,
              #lastName: lastName,
              #phone: phone,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.AuthTokens>> refreshTokens() =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshTokens,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i15.AuthTokens>>.value(
            _FakeEither_1<_i6.Failure, _i15.AuthTokens>(
          this,
          Invocation.method(
            #refreshTokens,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i15.AuthTokens>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> resetPassword({
    required String? token,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {
            #token: token,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #resetPassword,
            [],
            {
              #token: token,
              #newPassword: newPassword,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> changePassword({
    required String? currentPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {
            #currentPassword: currentPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {
              #currentPassword: currentPassword,
              #newPassword: newPassword,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> updateProfile({
    String? firstName,
    String? lastName,
    String? phone,
    String? avatar,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #phone: phone,
            #avatar: avatar,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {
              #firstName: firstName,
              #lastName: lastName,
              #phone: phone,
              #avatar: avatar,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> verifyEmail(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [token],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #verifyEmail,
            [token],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> resendEmailVerification() =>
      (super.noSuchMethod(
        Invocation.method(
          #resendEmailVerification,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #resendEmailVerification,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> deleteAccount(String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [password],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #deleteAccount,
            [password],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> checkEmailExists(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkEmailExists,
          [email],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #checkEmailExists,
            [email],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> checkUsernameExists(
          String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkUsernameExists,
          [username],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #checkUsernameExists,
            [username],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.AuthTokens>> getAuthTokens() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAuthTokens,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i15.AuthTokens>>.value(
            _FakeEither_1<_i6.Failure, _i15.AuthTokens>(
          this,
          Invocation.method(
            #getAuthTokens,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i15.AuthTokens>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> saveAuthTokens(
          _i15.AuthTokens? tokens) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAuthTokens,
          [tokens],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #saveAuthTokens,
            [tokens],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> clearAuthTokens() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearAuthTokens,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #clearAuthTokens,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> enableTwoFactor() =>
      (super.noSuchMethod(
        Invocation.method(
          #enableTwoFactor,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #enableTwoFactor,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> verifyTwoFactor(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyTwoFactor,
          [code],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #verifyTwoFactor,
            [code],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> disableTwoFactor(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableTwoFactor,
          [code],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #disableTwoFactor,
            [code],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> loginWithBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithBiometrics,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #loginWithBiometrics,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> enableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #enableBiometrics,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #enableBiometrics,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> disableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #disableBiometrics,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #disableBiometrics,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> isBiometricsAvailable() =>
      (super.noSuchMethod(
        Invocation.method(
          #isBiometricsAvailable,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #isBiometricsAvailable,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> socialLogin({
    required String? provider,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #socialLogin,
          [],
          {
            #provider: provider,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #socialLogin,
            [],
            {
              #provider: provider,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);

  @override
  _i5.Future<bool> isRememberMeEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isRememberMeEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> clearRememberMe() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearRememberMe,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #clearRememberMe,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, Map<String, String?>>>
      getSavedCredentials() => (super.noSuchMethod(
            Invocation.method(
              #getSavedCredentials,
              [],
            ),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, Map<String, String?>>>.value(
                    _FakeEither_1<_i6.Failure, Map<String, String?>>(
              this,
              Invocation.method(
                #getSavedCredentials,
                [],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, Map<String, String?>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> signInWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i16.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String?> getAuthToken() => (super.noSuchMethod(
        Invocation.method(
          #getAuthToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveAuthToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveAuthToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAuthTokens() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthTokens,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveRefreshToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveRefreshToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #saveUserId,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveUserCredentials(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserCredentials,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, String?>> getUserCredentials() => (super.noSuchMethod(
        Invocation.method(
          #getUserCredentials,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, String?>>.value(<String, String?>{}),
      ) as _i5.Future<Map<String, String?>>);

  @override
  _i5.Future<void> clearUserCredentials() => (super.noSuchMethod(
        Invocation.method(
          #clearUserCredentials,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveBiometricsEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #saveBiometricsEnabled,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getBiometricsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getBiometricsEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> savePasscode(String? passcode) => (super.noSuchMethod(
        Invocation.method(
          #savePasscode,
          [passcode],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getPasscode() => (super.noSuchMethod(
        Invocation.method(
          #getPasscode,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clearPasscode() => (super.noSuchMethod(
        Invocation.method(
          #clearPasscode,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveSessionData(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSessionData,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getSessionData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getSessionData,
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clearSessionData() => (super.noSuchMethod(
        Invocation.method(
          #clearSessionData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveDeviceId(String? deviceId) => (super.noSuchMethod(
        Invocation.method(
          #saveDeviceId,
          [deviceId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getDeviceId() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceId,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveFCMToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveFCMToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getFCMToken() => (super.noSuchMethod(
        Invocation.method(
          #getFCMToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> savePaymentToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #savePaymentToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getPaymentToken() => (super.noSuchMethod(
        Invocation.method(
          #getPaymentToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clearPaymentData() => (super.noSuchMethod(
        Invocation.method(
          #clearPaymentData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveAutoLockEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #saveAutoLockEnabled,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getAutoLockEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getAutoLockEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> saveAutoLockTimeout(int? minutes) => (super.noSuchMethod(
        Invocation.method(
          #saveAutoLockTimeout,
          [minutes],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> getAutoLockTimeout() => (super.noSuchMethod(
        Invocation.method(
          #getAutoLockTimeout,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<bool> hasStoredCredentials() => (super.noSuchMethod(
        Invocation.method(
          #hasStoredCredentials,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, String>> getAllData() => (super.noSuchMethod(
        Invocation.method(
          #getAllData,
          [],
        ),
        returnValue: _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);

  @override
  _i5.Future<bool> isStorageAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isStorageAvailable,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [GoogleSignInUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInUseCase extends _i1.Mock
    implements _i17.GoogleSignInUseCase {
  MockGoogleSignInUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> call(_i10.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.User>>.value(
            _FakeEither_1<_i6.Failure, _i7.User>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
}
